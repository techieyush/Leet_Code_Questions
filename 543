/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int diameterOfBinaryTree(TreeNode root) {
        if(root==null)
        {
            return -1;
        }
        int leftDia= diameterOfBinaryTree( root.left);
        int rightDia= diameterOfBinaryTree(root.right);
        int sd=ht(root.left)+ht(root.right)+2;
        return Math.max(rightDia,Math.max(leftDia,sd));  
}
public int ht(TreeNode root)
{
    if(root==null)
    {
        return -1;
    }
    int lh=ht(root.left);
    int rh=ht(root.right);
    return Math.max(lh,rh)+1;
}
}
