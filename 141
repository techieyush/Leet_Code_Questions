/**
 * Definition for singly-linked list.
 * class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public boolean hasCycle(ListNode head) {
        ListNode slowPtr=head;
        ListNode fastPtr=head;
        
        while(fastPtr!=null && fastPtr.next!=null)
        {
            slowPtr=slowPtr.next;
            fastPtr=fastPtr.next.next;
            if(slowPtr==fastPtr)
            {
                return true;
            }
        }
        // {
        //     if(head.val==1_000_000) return true;
        //     head.val=1_000_000;
        //     head=head.next;

        // }
        return false;
    }
}
