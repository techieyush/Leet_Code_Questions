
class Solution {
    public int maxSubarraySumCircular(int[] nums) {
        int count=0;
        int maxVal1=kadane(nums);
        int n=nums.length;
        for(int i=0;i<n;i++)
        {
            count+=nums[i];
            nums[i]=-nums[i];
        }
        int minVal=kadane(nums);
        int maxVal2=count+minVal;

        if(maxVal2==0)
        {
            return maxVal1;
        }
        return Math.max(maxVal1,maxVal2);
    }
     public int kadane(int nums[])
    {
        int maxSum=nums[0];
        int maxVal=nums[0];
        for(int i=1;i<nums.length;i++)
        {
            maxSum=Math.max(maxSum+nums[i],nums[i]);

            maxVal=Math.max(maxVal,maxSum);
        }
        return maxVal;
    }
}
